<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Netty</title>
    <url>/2023/06/01/Netty/</url>
    <content><![CDATA[<h3 id="Netty-介绍"><a href="#Netty-介绍" class="headerlink" title="Netty 介绍"></a>Netty 介绍</h3><p>    Netty是一个高性能，时间驱动，异步非阻塞的IO，Java开源框架。Netty是一个基于NIO客户端，服务端编程框架，使用Netty可以确保快速和简单地开发出一个网络应用。例如实现了某种协议的客户端、服务端应用。很多高性能项目拿它作为其Socket底层的通信基础，比如说分布式服务治理框架Dubbo。</p>
]]></content>
  </entry>
  <entry>
    <title>Redis</title>
    <url>/2022/07/25/redis/</url>
    <content><![CDATA[<h3 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h3><h5 id="什么是Redis？简单描述优缺点"><a href="#什么是Redis？简单描述优缺点" class="headerlink" title="什么是Redis？简单描述优缺点"></a>什么是Redis？简单描述优缺点</h5><ol>
<li><p>Redis本质上是一个Key-value类型的内存数据库,整个数据库都是在内存当中进行操作的</p>
</li>
<li><p>每秒可以处理超过10万次读写操作，是已知性能最快的Key-Value数据库</p>
</li>
<li><p>Redis支持保存多种数据结构，此外单个Value的最大限制是1GB，</p>
</li>
<li><p>缺点：容易受到物理内存的限制，不能用做海量数据库的高性能读写，因此Redis适合的场景主要局限在较小数据量的高性能操作和运算上</p>
</li>
</ol>
<h5 id="Redis支持哪几种数据类型"><a href="#Redis支持哪几种数据类型" class="headerlink" title="Redis支持哪几种数据类型"></a>Redis支持哪几种数据类型</h5><p>    Redis支持五种数据类型，String (字符串)、Hash（哈希）、List（列表）、Set（集合）</p>
<h5 id="缓存和数据库的区别"><a href="#缓存和数据库的区别" class="headerlink" title="缓存和数据库的区别"></a>缓存和数据库的区别</h5><ul>
<li><p> 缓存数据不重要</p>
</li>
<li><p>不是全量数据</p>
</li>
<li><p>缓存应该随着访问变化，热数据</p>
</li>
</ul>
<h5 id="Redis如何淘汰过期的keys"><a href="#Redis如何淘汰过期的keys" class="headerlink" title="Redis如何淘汰过期的keys"></a>Redis如何淘汰过期的keys</h5><p>     Redis keys过期有两种方式：被动和主动方式。</p>
<h5 id="Redis持久化"><a href="#Redis持久化" class="headerlink" title="Redis持久化"></a>Redis持久化</h5><p>    Redis持久化分为两种，RDB、AOF</p>
<h5 id="RDB"><a href="#RDB" class="headerlink" title="RDB"></a>RDB</h5><ul>
<li><p>save:</p>
</li>
<li><p>bgsave: fork 创建子进程去做</p>
</li>
</ul>
]]></content>
  </entry>
</search>
